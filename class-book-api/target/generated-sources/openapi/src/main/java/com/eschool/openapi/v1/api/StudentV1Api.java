/*
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.eschool.openapi.v1.api;

import com.eschool.openapi.v1.model.CommonResponseDto;
import com.eschool.openapi.v1.model.ErrorDto;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.annotation.Generated;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-07-01T17:44:52.817734300+08:00[Asia/Shanghai]")
@Validated
@Api(value = "StudentV1", description = "the StudentV1 API")
public interface StudentV1Api {

    /**
     * DELETE /ui/students/{studentId} : Student deleting
     *
     * @param studentId Id for student updating (required)
     * @return Successful response (status code 200)Supplied request data are invalid (status code 400)Access token is missing or invalid (status code 401)User is not granted sufficient privileges (status code 403)Internal server error (status code 500)
     */
    @ApiOperation(value = "Student deleting", nickname = "deleteStudent", notes = "", response = CommonResponseDto.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "student-v1", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful response", response = CommonResponseDto.class)
        @ApiResponse(code = 400, message = "Supplied request data are invalid", response = ErrorDto.class)
        @ApiResponse(code = 401, message = "Access token is missing or invalid")
        @ApiResponse(code = 403, message = "User is not granted sufficient privileges", response = ErrorDto.class)
        @ApiResponse(code = 500, message = "Internal server error", response = ErrorDto.class) })
    @RequestMapping(value = "/ui/students/{studentId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<CommonResponseDto> _deleteStudent(@ApiParam(value = "Id for student updating",required=true) @PathVariable("studentId") Long studentId);

}
