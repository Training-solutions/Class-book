/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.eschool.openapi.v1.api;

import com.eschool.openapi.v1.model.ErrorView;
import com.eschool.openapi.v1.model.EvaluationRecordDto;
import com.eschool.openapi.v1.model.PageViewDto;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;
import java.time.OffsetDateTime;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-11-15T10:48:04.327672500+02:00[Europe/Helsinki]")
@Validated
@Api(value = "EvaluationRecordsV1", description = "the EvaluationRecordsV1 API")
public interface EvaluationRecordsV1Api {

    /**
     * GET /ui/evaluationRecords : Get list of evaluationRecords by subject, teacher, group, student, startDate and endDate
     *
     * @param subjectId Subject identifier (optional)
     * @param teacherId Teacher identifier (optional)
     * @param groupId GroupIdentifier (optional)
     * @param studentId Student identifier (optional)
     * @param startDate Student identifier (optional)
     * @param endDate Student identifier (optional)
     * @return Successful response (status code 200)
     *         or Supplied request data are invalid (status code 400)
     *         or Access token is missing or invalid (status code 401)
     *         or User is not granted sufficient privileges (status code 403)
     *         or Resource was not found (status code 404)
     *         or Internal server error (status code 500)
     */
    @ApiOperation(
        value = "Get list of evaluationRecords by subject, teacher, group, student, startDate and endDate",
        nickname = "getEvaluationRecords",
        notes = "",
        response = PageViewDto.class,
        authorizations = {
            @Authorization(value = "bearerAuth")
         },
        tags={ "evaluationRecords-v1", })
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Successful response", response = PageViewDto.class),
        @ApiResponse(code = 400, message = "Supplied request data are invalid", response = ErrorView.class),
        @ApiResponse(code = 401, message = "Access token is missing or invalid"),
        @ApiResponse(code = 403, message = "User is not granted sufficient privileges", response = ErrorView.class),
        @ApiResponse(code = 404, message = "Resource was not found", response = ErrorView.class),
        @ApiResponse(code = 500, message = "Internal server error", response = ErrorView.class) })
    @GetMapping(
        value = "/ui/evaluationRecords",
        produces = { "application/json" }
    )
    ResponseEntity<PageViewDto<EvaluationRecordDto>> getEvaluationRecords(
        @ApiParam(value = "Subject identifier")
        @Valid @RequestParam(value = "subjectId", required = false) Long subjectId,
        @ApiParam(value = "Teacher identifier")
        @Valid @RequestParam(value = "teacherId", required = false) Long teacherId,
        @ApiParam(value = "GroupIdentifier")
        @Valid @RequestParam(value = "groupId", required = false) Long groupId,
        @ApiParam(value = "Student identifier")
        @Valid @RequestParam(value = "studentId", required = false) Long studentId,
        @ApiParam(value = "Student identifier")
        @Valid @RequestParam(value = "startDate", required = false) OffsetDateTime startDate,
        @ApiParam(value = "Student identifier")
        @Valid @RequestParam(value = "endDate", required = false) OffsetDateTime endDate);

}
